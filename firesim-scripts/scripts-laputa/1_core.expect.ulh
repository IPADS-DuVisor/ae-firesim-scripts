#!/usr/bin/expect

set timeout -1

set env(TERM) xterm-256color
set env(SHELL) /bin/bash
set env(SHLVL) 2
set env(SUDO_COMMAND) /bin/bash
set HOST "172.16.0.4"
set FPGA "192.168.3.100"
set kvm_or_laputa [lindex $argv 0]
set TIMES 3

if {$kvm_or_laputa == "laputa"} {
    set HOST_NET "host_net_ulh.sh"
} else {
    set HOST_NET "host_net.sh"
}

spawn bash -c "ssh $FPGA"

expect {
	"centos@ip" {
		send "screen -r fsim0\n"
	}
}

expect {
    "buildroot login" {
	puts "start login"
    	send "root\n"
	exp_continue
    }

    "Password:" {
	send "firesim\n"
	expect {
		"#" {
			send "cd / &&  mount ubuntu-vdisk.img root && chroot root bash\n"
			expect  "root@buildroot:"
			
			send "./mount_dev.sh && ./prepare_kill.sh && ./${HOST_NET} && ./${kvm_or_laputa}_linux.sh \n"

			expect "Server listening"
			send "\x01"; send "d"
   		}
   	}
    }
}



expect {
	"centos@ip" {
		send "screen -r fsim1\n"
	}
}

expect {
    "buildroot login" {
    	send "root\n"
	exp_continue
    }

    "Password:" {
	send "firesim\n"
	expect {
		"#" {
   		 	send "cd / &&  mount ubuntu-vdisk.img root && chroot root \n"
   		 	expect "root@buildroot:"

   		 	send "mount blk-dev.img root && chroot root \n"
   		 	expect "root@buildroot:"

                        send "HOST=$HOST TIMES=1 ./iperf3.sh && echo k  j\n"
                        #send "HOST=$HOST TIMES=$TIMES ./iperf3.sh && echo k  j\n"
                        expect "k j"

                        send "HOST=$HOST TIMES=2 ./netperf.sh && echo k  4\n"
                        #send "HOST=$HOST TIMES=$TIMES ./netperf.sh && echo k  4\n"
                        expect "k 4"
                        
                        send "HOST=$HOST TIMES=$TIMES ./memcached_client.sh && echo 'bye memcached' | tr a-z A-Z\n"
                        expect "BYE MEMCACHED"
                        
                        send "echo 'ALL TEST DONE'\n"
                        expect "#"

                        send "\x01"; send "d"
		}
	}
    }
}
        
puts "ALL TEST DONE"
