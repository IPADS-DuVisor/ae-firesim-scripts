#!/usr/bin/expect

set timeout -1

set env(TERM) xterm-256color
set env(SHELL) /bin/bash
set env(SHLVL) 2
set env(SUDO_COMMAND) /bin/bash
set HOST "172.16.0.4"
set FPGA "192.168.3.100"
set kvm_or_laputa [lindex $argv 0]
set TIMES 1

if {$kvm_or_laputa == "laputa"} {
    set HOST_NET "host_net_ulh.sh"
} else {
    set HOST_NET "host_net.sh"
}

spawn bash -c "ssh $FPGA"

expect {
	"centos@ip" {
		send "screen -x fsim0\n"
	}
}

expect {
    "buildroot login" {
        puts "start login"
            send "root\n"
            exp_continue
    }

    "Password:" {
        send "firesim\n"
            expect {
                "#" {
                    send "cd / &&  mount ubuntu-vdisk.img root && chroot root bash\n"
                        expect  "root@buildroot:"

                        send "./mount_dev.sh && ./prepare_kill.sh && ./${HOST_NET} \n" 
                        expect  "#"

                set x 0
                while {$x < 8} {
                        send "kill -9 \\\$(ps aux | grep -i qemu | head -n 1 | awk '{print \\\$2}')\n"
                        expect "#"
                        
                        send "\n"	
                        expect "#"

                        send "./${kvm_or_laputa}_linux.sh < /dev/null &\n"
                        expect "Memcached server started"

                        send "\n"	
                        expect "#"

                        send "\n"
                        send "\n"
                        
                        expect "buildroot"
                        send "\n"
                        send "\n"
                        
                        expect "#"
                        send "ping -c 1 $HOST\n"
                        send "\n"

                        expect "#"
                        send "HOST=$HOST TIMES=$TIMES taskset -a 0x8 ./memcached_client.sh && echo 'bye memcached' | tr a-z A-Z\n"
                        
                        expect "BYE MEMCACHED"
                        send "\n"

                        expect "#"
                        send "clear \n"
                        
                        set x [expr {$x + 1}]
                }
                        
                        expect "#"
                        send "echo 'ALL TEST DONE'\n"

                        expect "#"
                        send "\x01"; send "d"
                }
            }
    }
}
